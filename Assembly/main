ARM GAS  /tmp/ccotFeLz.s 			page 1


   1              		.arch armv6
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 2
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.rodata
  17              		.align	2
  18              	.LC0:
  19 0000 25640A00 		.ascii	"%d\012\000"
  20              		.text
  21              		.align	2
  22              		.global	main
  23              		.syntax unified
  24              		.arm
  25              		.fpu vfp
  27              	main:
  28              		.fnstart
  29              	.LFB6:
  30              		.file 1 "main.c"
   1:main.c        **** //https://stackoverflow.com/questions/20953907/how-to-generate-assembly-listings-in-codeblocks
   2:main.c        **** #include <stdio.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** int main()
   5:main.c        **** {
  31              		.loc 1 5 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 112
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 00482DE9 		push	{fp, lr}
  36              		.save {fp, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 11, -8
  39              		.cfi_offset 14, -4
  40              		.setfp fp, sp, #4
  41 0004 04B08DE2 		add	fp, sp, #4
  42              		.cfi_def_cfa 11, 4
  43              		.pad #112
  44 0008 70D04DE2 		sub	sp, sp, #112
   6:main.c        ****     int sorta[20];
   7:main.c        **** 
   8:main.c        ****     //Determine number of elements in array
   9:main.c        ****     int nElements = sizeof(sorta)/sizeof(sorta[0]);
  45              		.loc 1 9 0
  46 000c 1430A0E3 		mov	r3, #20
  47 0010 1C300BE5 		str	r3, [fp, #-28]
  48              	.LBB2:
  10:main.c        **** 
ARM GAS  /tmp/ccotFeLz.s 			page 2


  11:main.c        ****     //Create an array with random ints
  12:main.c        ****     for(int i = 0; i < nElements; i++)
  49              		.loc 1 12 0
  50 0014 0030A0E3 		mov	r3, #0
  51 0018 08300BE5 		str	r3, [fp, #-8]
  52              	.L3:
  53              		.loc 1 12 0 is_stmt 0 discriminator 3
  54 001c 08201BE5 		ldr	r2, [fp, #-8]
  55 0020 1C301BE5 		ldr	r3, [fp, #-28]
  56 0024 030052E1 		cmp	r2, r3
  57 0028 0A0000AA 		bge	.L2
  13:main.c        ****     {
  14:main.c        ****         sorta[i] = rand();
  58              		.loc 1 14 0 is_stmt 1 discriminator 2
  59 002c FEFFFFEB 		bl	rand
  60 0030 0020A0E1 		mov	r2, r0
  61 0034 08301BE5 		ldr	r3, [fp, #-8]
  62 0038 0331A0E1 		lsl	r3, r3, #2
  63 003c 04104BE2 		sub	r1, fp, #4
  64 0040 033081E0 		add	r3, r1, r3
  65 0044 702003E5 		str	r2, [r3, #-112]
  12:main.c        ****     {
  66              		.loc 1 12 0 discriminator 2
  67 0048 08301BE5 		ldr	r3, [fp, #-8]
  68 004c 013083E2 		add	r3, r3, #1
  69 0050 08300BE5 		str	r3, [fp, #-8]
  70 0054 F0FFFFEA 		b	.L3
  71              	.L2:
  72              	.LBE2:
  73              	.LBB3:
  15:main.c        ****     }
  16:main.c        **** 
  17:main.c        ****     //print unsorted array
  18:main.c        ****     for(int i = 0; i < nElements; i++)
  74              		.loc 1 18 0
  75 0058 0030A0E3 		mov	r3, #0
  76 005c 0C300BE5 		str	r3, [fp, #-12]
  77              	.L5:
  78              		.loc 1 18 0 is_stmt 0 discriminator 1
  79 0060 0C201BE5 		ldr	r2, [fp, #-12]
  80 0064 1C301BE5 		ldr	r3, [fp, #-28]
  81 0068 030052E1 		cmp	r2, r3
  82 006c 0B0000AA 		bge	.L4
  19:main.c        ****     {
  20:main.c        ****         printf("%d\n",sorta[i]);
  83              		.loc 1 20 0 is_stmt 1
  84 0070 0C301BE5 		ldr	r3, [fp, #-12]
  85 0074 0331A0E1 		lsl	r3, r3, #2
  86 0078 04204BE2 		sub	r2, fp, #4
  87 007c 033082E0 		add	r3, r2, r3
  88 0080 703013E5 		ldr	r3, [r3, #-112]
  89 0084 0310A0E1 		mov	r1, r3
  90 0088 60019FE5 		ldr	r0, .L14
  91 008c FEFFFFEB 		bl	printf
  18:main.c        ****     {
  92              		.loc 1 18 0
  93 0090 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  /tmp/ccotFeLz.s 			page 3


  94 0094 013083E2 		add	r3, r3, #1
  95 0098 0C300BE5 		str	r3, [fp, #-12]
  96 009c EFFFFFEA 		b	.L5
  97              	.L4:
  98              	.LBE3:
  99              	.LBB4:
  21:main.c        ****     }
  22:main.c        **** 
  23:main.c        ****     // sort array
  24:main.c        ****     for (int j = 0; j < nElements; j++)
 100              		.loc 1 24 0
 101 00a0 0030A0E3 		mov	r3, #0
 102 00a4 10300BE5 		str	r3, [fp, #-16]
 103              	.L10:
 104              		.loc 1 24 0 is_stmt 0 discriminator 1
 105 00a8 10201BE5 		ldr	r2, [fp, #-16]
 106 00ac 1C301BE5 		ldr	r3, [fp, #-28]
 107 00b0 030052E1 		cmp	r2, r3
 108 00b4 350000AA 		bge	.L6
 109              	.LBB5:
 110              	.LBB6:
  25:main.c        ****     {
  26:main.c        ****         for(int i = 0; i < nElements-1; i++)
 111              		.loc 1 26 0 is_stmt 1
 112 00b8 0030A0E3 		mov	r3, #0
 113 00bc 14300BE5 		str	r3, [fp, #-20]
 114              	.L9:
 115              		.loc 1 26 0 is_stmt 0 discriminator 1
 116 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 117 00c4 012043E2 		sub	r2, r3, #1
 118 00c8 14301BE5 		ldr	r3, [fp, #-20]
 119 00cc 030052E1 		cmp	r2, r3
 120 00d0 2A0000DA 		ble	.L7
 121              	.LBB7:
 122              	.LBB8:
  27:main.c        ****         {
  28:main.c        ****             //printf("%d\n", sorta[i]);
  29:main.c        ****             if (sorta[i]>sorta[i+1])
 123              		.loc 1 29 0 is_stmt 1
 124 00d4 14301BE5 		ldr	r3, [fp, #-20]
 125 00d8 0331A0E1 		lsl	r3, r3, #2
 126 00dc 04204BE2 		sub	r2, fp, #4
 127 00e0 033082E0 		add	r3, r2, r3
 128 00e4 702013E5 		ldr	r2, [r3, #-112]
 129 00e8 14301BE5 		ldr	r3, [fp, #-20]
 130 00ec 013083E2 		add	r3, r3, #1
 131 00f0 0331A0E1 		lsl	r3, r3, #2
 132 00f4 04104BE2 		sub	r1, fp, #4
 133 00f8 033081E0 		add	r3, r1, r3
 134 00fc 703013E5 		ldr	r3, [r3, #-112]
 135 0100 030052E1 		cmp	r2, r3
 136 0104 190000DA 		ble	.L8
 137              	.LBB9:
  30:main.c        ****                 {
  31:main.c        ****                     int b,a;
  32:main.c        ****                     b = sorta[i+1];
 138              		.loc 1 32 0
ARM GAS  /tmp/ccotFeLz.s 			page 4


 139 0108 14301BE5 		ldr	r3, [fp, #-20]
 140 010c 013083E2 		add	r3, r3, #1
 141 0110 0331A0E1 		lsl	r3, r3, #2
 142 0114 04204BE2 		sub	r2, fp, #4
 143 0118 033082E0 		add	r3, r2, r3
 144 011c 703013E5 		ldr	r3, [r3, #-112]
 145 0120 20300BE5 		str	r3, [fp, #-32]
  33:main.c        ****                     a = sorta[i];
 146              		.loc 1 33 0
 147 0124 14301BE5 		ldr	r3, [fp, #-20]
 148 0128 0331A0E1 		lsl	r3, r3, #2
 149 012c 04204BE2 		sub	r2, fp, #4
 150 0130 033082E0 		add	r3, r2, r3
 151 0134 703013E5 		ldr	r3, [r3, #-112]
 152 0138 24300BE5 		str	r3, [fp, #-36]
  34:main.c        ****                     sorta[i+1] = a;
 153              		.loc 1 34 0
 154 013c 14301BE5 		ldr	r3, [fp, #-20]
 155 0140 013083E2 		add	r3, r3, #1
 156 0144 0331A0E1 		lsl	r3, r3, #2
 157 0148 04204BE2 		sub	r2, fp, #4
 158 014c 033082E0 		add	r3, r2, r3
 159 0150 24201BE5 		ldr	r2, [fp, #-36]
 160 0154 702003E5 		str	r2, [r3, #-112]
  35:main.c        ****                     sorta[i] =b;
 161              		.loc 1 35 0
 162 0158 14301BE5 		ldr	r3, [fp, #-20]
 163 015c 0331A0E1 		lsl	r3, r3, #2
 164 0160 04204BE2 		sub	r2, fp, #4
 165 0164 033082E0 		add	r3, r2, r3
 166 0168 20201BE5 		ldr	r2, [fp, #-32]
 167 016c 702003E5 		str	r2, [r3, #-112]
 168              	.L8:
 169              	.LBE9:
 170              	.LBE8:
 171              	.LBE7:
  26:main.c        ****         {
 172              		.loc 1 26 0 discriminator 2
 173 0170 14301BE5 		ldr	r3, [fp, #-20]
 174 0174 013083E2 		add	r3, r3, #1
 175 0178 14300BE5 		str	r3, [fp, #-20]
 176 017c CFFFFFEA 		b	.L9
 177              	.L7:
 178              	.LBE6:
 179              	.LBE5:
  24:main.c        ****     {
 180              		.loc 1 24 0 discriminator 2
 181 0180 10301BE5 		ldr	r3, [fp, #-16]
 182 0184 013083E2 		add	r3, r3, #1
 183 0188 10300BE5 		str	r3, [fp, #-16]
 184 018c C5FFFFEA 		b	.L10
 185              	.L6:
 186              	.LBE4:
  36:main.c        ****                 }
  37:main.c        ****         }
  38:main.c        ****     }
  39:main.c        **** 
ARM GAS  /tmp/ccotFeLz.s 			page 5


  40:main.c        **** 
  41:main.c        ****     printf("\n");
 187              		.loc 1 41 0
 188 0190 0A00A0E3 		mov	r0, #10
 189 0194 FEFFFFEB 		bl	putchar
 190              	.LBB10:
  42:main.c        **** 
  43:main.c        ****     //print sorted array
  44:main.c        ****     for(int i = 0; i < nElements; i++)
 191              		.loc 1 44 0
 192 0198 0030A0E3 		mov	r3, #0
 193 019c 18300BE5 		str	r3, [fp, #-24]
 194              	.L12:
 195              		.loc 1 44 0 is_stmt 0 discriminator 1
 196 01a0 18201BE5 		ldr	r2, [fp, #-24]
 197 01a4 1C301BE5 		ldr	r3, [fp, #-28]
 198 01a8 030052E1 		cmp	r2, r3
 199 01ac 0B0000AA 		bge	.L11
  45:main.c        ****     {
  46:main.c        ****         printf("%d\n",sorta[i]);
 200              		.loc 1 46 0 is_stmt 1
 201 01b0 18301BE5 		ldr	r3, [fp, #-24]
 202 01b4 0331A0E1 		lsl	r3, r3, #2
 203 01b8 04204BE2 		sub	r2, fp, #4
 204 01bc 033082E0 		add	r3, r2, r3
 205 01c0 703013E5 		ldr	r3, [r3, #-112]
 206 01c4 0310A0E1 		mov	r1, r3
 207 01c8 20009FE5 		ldr	r0, .L14
 208 01cc FEFFFFEB 		bl	printf
  44:main.c        ****     {
 209              		.loc 1 44 0
 210 01d0 18301BE5 		ldr	r3, [fp, #-24]
 211 01d4 013083E2 		add	r3, r3, #1
 212 01d8 18300BE5 		str	r3, [fp, #-24]
 213 01dc EFFFFFEA 		b	.L12
 214              	.L11:
 215              	.LBE10:
  47:main.c        ****     }
  48:main.c        **** }
 216              		.loc 1 48 0
 217 01e0 0030A0E3 		mov	r3, #0
 218 01e4 0300A0E1 		mov	r0, r3
 219 01e8 04D04BE2 		sub	sp, fp, #4
 220              		.cfi_def_cfa 13, 8
 221              		@ sp needed
 222 01ec 0088BDE8 		pop	{fp, pc}
 223              	.L15:
 224              		.align	2
 225              	.L14:
 226 01f0 00000000 		.word	.LC0
 227              		.cfi_endproc
 228              	.LFE6:
 229              		.fnend
 231              	.Letext0:
 232              		.file 2 "/usr/lib/gcc/arm-linux-gnueabihf/6/include/stddef.h"
 233              		.file 3 "/usr/include/arm-linux-gnueabihf/bits/types.h"
 234              		.file 4 "/usr/include/libio.h"
ARM GAS  /tmp/ccotFeLz.s 			page 6


 235              		.file 5 "/usr/include/stdio.h"
 236              		.file 6 "/usr/include/arm-linux-gnueabihf/bits/sys_errlist.h"
 237              		.file 7 "/usr/include/c++/6/cstdlib"
 238              		.file 8 "/usr/include/arm-linux-gnueabihf/c++/6/bits/c++config.h"
 239              		.file 9 "/usr/include/stdlib.h"
 240              		.file 10 "/usr/include/c++/6/stdlib.h"
 241              		.file 11 "<built-in>"
ARM GAS  /tmp/ccotFeLz.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccotFeLz.s:17     .rodata:00000000 $d
     /tmp/ccotFeLz.s:21     .text:00000000 $a
     /tmp/ccotFeLz.s:27     .text:00000000 main
     /tmp/ccotFeLz.s:226    .text:000001f0 $d
                       .ARM.extab:00000000 $d
                       .ARM.exidx:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
rand
printf
putchar
__aeabi_unwind_cpp_pr1
